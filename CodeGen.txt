#include <bits/stdc++.h>
#include <cstdint>

enum class Opcode : uint8_t {
    ADD = 0x01,
    SUB = 0x02,
    MUL = 0x03,
    DIV = 0x04,
};

std::vector<uint8_t> generateMachineCode(Opcode op, int operand1, int operand2) {
    std::vector<uint8_t> code;

    code.push_back(static_cast<uint8_t>(op));

    code.push_back(static_cast<uint8_t>(operand1));
    code.push_back(static_cast<uint8_t>(operand2));

    return code;
}

int main() {
    Opcode op = Opcode::ADD;
    int operand1 = 10;
    int operand2 = 20;

    std::vector<uint8_t> machineCode = generateMachineCode(op, operand1, operand2);
    std::cout << "Generated machine code:";
    for (uint8_t byte : machineCode) {
        std::cout << " " << std::hex << static_cast<int>(byte);
    }
    std::cout << std::endl;

    return 0;
}
